pred precondition_Lista_set_elementA
[ indice:JavaPrimitiveIntegerValue,values:JavaPrimitiveIntegerValue->(JavaPrimitiveIntegerValue+Null)]
{  not (no indice.values) and sequence[values]}


pred postcondition_Lista_set_elementA
[ size:JavaPrimitiveIntegerValue,size':JavaPrimitiveIntegerValue,
  indice: JavaPrimitiveIntegerValue,
  elem: JavaPrimitiveIntegerValue,
  values:JavaPrimitiveIntegerValue->(JavaPrimitiveIntegerValue+Null),
  values':JavaPrimitiveIntegerValue->(JavaPrimitiveIntegerValue+Null),
  retorno:JavaPrimitiveIntegerValue
]
{
  pred_java_primitive_integer_value_eq[size,size'] and myseq_card[values,size] and
  sequence[values]  and retorno=indice.values and values'=values++(indice->elem) and sequence[values']
}



act stack_set_action[/*inout*/size:JavaPrimitiveIntegerValue,/*inout*/size':JavaPrimitiveIntegerValue,/*in*/intJ_1:JavaPrimitiveIntegerValue,/*in*/intJ_2:JavaPrimitiveIntegerValue,/*inout*/thisType_1:JavaPrimitiveIntegerValue->(JavaPrimitiveIntegerValue+Null),/*out*/return_Jint_1:JavaPrimitiveIntegerValue] {  
   pre { precondition_Lista_set_elementA[intJ_1,thisType_1] }
   post { postcondition_Lista_set_elementA[size,size',intJ_1,intJ_2,thisType_1,thisType_1',return_Jint_1'] }
}/*scope:0*/


